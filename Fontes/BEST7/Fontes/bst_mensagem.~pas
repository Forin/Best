unit bst_mensagem;

interface

uses
  Windows, bst_basefrm,Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, TPCProgressBars, StdCtrls, Buttons,Qrctrls,bstdb, QuickRpt,
  cls_utils, CLS_OBJ,SHELLAPI;

type
  Tfrm_mensagem = class(TBasefrm)
    //pcg: TPCProgressBar;
    sp_imp: TSpeedButton;
    sp_exp: TSpeedButton;
    sp_ger: TSpeedButton;
    Label1: TLabel;
    plan: TCheckBox;
    Memo1: TMemo;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure sp_expClick(Sender: TObject);
    procedure sp_gerClick(Sender: TObject);
    procedure sp_impClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    procedure Loadconstantobj;override;

  end;

var
  frm_mensagem: Tfrm_mensagem;

implementation

uses bst_cimp,  bst_preqti, bst_main, bst_treeAtiv, bst_dm_rel;

{$R *.dfm}

procedure Tfrm_mensagem.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  tv.selected := frm_treeativ.WNoAtu;
  tv.TvClick(tv);
  frm_mensagem := nil;
  action := caFree;
end;

procedure Tfrm_mensagem.sp_expClick(Sender: TObject);
var
warq,wString,WARQ1 : string;
begin
    memo1.lines.Clear;
    sp_gerClick(nil);

    warq :=bdx.DirFluxo+'Requerim_ti.xls' ;
    memo1.lines.Add('');
    memo1.lines.Add(mens149+ bdx.DirFluxo);//'Planilha gerada com Nome REQUERIM_TI.XLS no Diretório ');
    If fileexists(wArq) then
      deletefile( wArq);
    wstring := 'SELECT WBS,PROCESSO,DESC_PROCESSO,CATEGORIA,OBJETIVOUC,ADERENCIA,COMENTARIOS,PONTOS,AVALIACAO,PRODUTOS,REGRA INTO REQUERIMENTOS IN '+ ''+'"'+warq+'"'+ ''+' "EXCEL 8.0;"'+''+'  FROM REQUERIMENTOS';
   // wstring := 'SELECT * INTO REQUERIMENTOS '+ 'IN "C:\BUFFER\TESTE.XLS" "EXCEL 8.0;"  FROM REQUERIMENTOS';
   // showmessage(wstring);
    bdx.Execute(wstring);

    If Plan.checked then
      shellexecute(handle,'open',pChar(warq),'','',sw_shownormal);

 //   showmessage(mens97+warq);
end;

procedure Tfrm_mensagem.sp_gerClick(Sender: TObject);
begin
 // lb.Visible := true;
   memo1.lines.add(mens148);//'Aguardar .O BEST esta compilando os Requerimentos de TI.');
    memo1.Repaint;
  //pcg.Visible := true;
  sp_imp.Enabled := false;
  sp_exp.Enabled := false;
  frm_treeativ.Gera_planilha(tv.selected);
end;

procedure Tfrm_mensagem.sp_impClick(Sender: TObject);
var
i : integer;
iAp : Tdados_tab;
begin
   try
     If  frm_Cimp    =   nil then
        frm_Cimp    := Tfrm_Cimp.Create(self);
     frm_cimp.label1.caption := def37;
     frm_Cimp.showModal;
     If canc then
        exit;
    If frm_preqti     = nil then
       frm_preqti      := Tfrm_preqti.create(self);

    iAp := Tdados_tab.create(self);
    iAp.OpenAllbydesc(udado(tv.Selected.Data)^.Fcli,udado(tv.Selected.Data)^.fproj,
                     'IDF_AP','AP','UC' ) ;
   // frm_preqti.sub1.dataset := dm_rel.qry_req;
    {with frm_preqti do
      begin
         for i := 0 to componentCount -1 do
          begin
           If (Components[i] is Tqrband) or  (Components[i] is TqrChildband)
               or  (Components[i] is TqrGroup)then
              qrdataset(frm_preqti.Components[i],dm_rel.qry_req);
          end;
      end;   }
     If prev then
        //frm_preqti.qrp.preview
     else
        //frm_preqti.qrp.print;

   finally
      //frm_preqti.close;
   end;

end;

procedure Tfrm_mensagem.FormCreate(Sender: TObject);
begin
  if bdx.TIPOBANCO > 0 then
     sp_exp.Enabled := false;
end;

procedure Tfrm_mensagem.Loadconstantobj;
var
i : integer;

begin
 Caption            := def37;//'Requerimentos de TI'  ;
 sp_imp. Caption    := def761;//'Imprimir  ;                      '
 sp_exp.Caption     := defg6;//'Gerar em Planilha' ;
 sp_ger.Caption     := defg7;//'Gerar                          '   ;
 plan.Caption       := defa14;//'Abrir Planilha após gerar'    ;

end;

end.

